import MarkDownDisplay from './react-markdown'
import MarketingPlansForm from './marketing-plans-form'
import { useState } from 'react';
import axios from "axios"



const useMarketingPlan = ()=> {
  const [step, setStep] = useState(1)

    const nextStep = () => setStep(step + 1)
    const prevStep = () => setStep(step - 1)

    const [loading, setLoading] = useState(false);
    const [error, setError] = useState("");
    const [data, setData] = useState("");
    const [prompt, setPrompt] = useState({
        goals: '',
        artist_name: '',
        genre: '',
        target_audience: '',
        additional_information: '',
        assets: '',
        budget: '',
        channels: '',
        timeline: ''
    });


    const handleInputChange = e => {
        setPrompt(prevPrompt => ({
            ...prevPrompt,
            [e.target.id]: e.target.value
        }));
    };

    const handleSubmitted = async () => {
        setLoading(true);
        setError("");
        axios.post("http://localhost:3001/api/generate-a-marketing-plan", prompt).then(res => {
            console.log(res.data);
            setLoading(false);
        }).catch(err => {
            console.log('Error Submitting data: ', err);
            setLoading(false);
        });
    };

    const handleSubmit = async () => {
        setLoading(true);
        setError("");
        try {
            const response = await fetch('http://localhost:3001/api/generate-a-marketing-plan', {
                body: JSON.stringify(prompt),
                method: 'POST'
            });

            if (response.ok) {

                setLoading(false);

                const reader = response.body?.getReader();
                const decoder = new TextDecoder();


                // let result = '';
                let done = false;
                while (!done) {
                    const { value, done: streamDone } = await reader?.read();
                    done = streamDone;

                    if (value) {
                        // result += decoder.decode(value);
                        
                        setData((prevData) => prevData + decoder.decode(value)); // Append new chunks
                        onPlanGenerated((prevData) => prevData + decoder.decode(value)); // Append new chunks
                       
                    }
                }
            }

        } catch (err) {
            console.log('The error is: ', err);
        }
    }


    return {
      handleSubmit,
      handleInputChange,
      data,
      loading,
      error,
      nextStep,
      prevStep
    }
}



export function MarketingPlans() {

  const {data, error, handleInputChange, handleSubmit, loading, nextStep, prevStep} = useMarketingPlan();

  return (
    <>
      <MarketingPlansForm  />
      {(data && data.length > 0) && <MarkDownDisplay key={data} text={data} />}
    </>
  );
}